services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    healthcheck:
      test: ['CMD', 'nc', '-z', 'localhost', '2181']
      interval: 10s
      timeout: 5s
      retries: 10
    ports:
      - '2181:2181'

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    depends_on:
      zookeeper:
        condition: service_healthy
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:29092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://host.docker.internal:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    ports:
      - '9092:9092'
      - '29092:29092'
    healthcheck:
      test:
        [
          'CMD',
          'bash',
          '-c',
          'kafka-topics --bootstrap-server kafka:29092 --list >/dev/null 2>&1',
        ]
      interval: 10s
      timeout: 10s
      retries: 10

  app:
    build: .
    depends_on:
      kafka:
        condition: service_healthy
    env_file:
      - .env
    environment:
      KAFKA_BROKER: kafka:9092
      KAFKA_CLIENT_ID: mesa-ya-service
      KAFKA_GROUP_ID: mesa-ya-group
      NODE_ENV: production
    ports:
      - '3000:3000'
    command: ['npm', 'run', 'start:prod']
    restart: unless-stopped
